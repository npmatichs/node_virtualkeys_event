os: unstable
environment:
  NODE_PRE_GYP_GITHUB_TOKEN:
    secure: kczaTxXx3hTb1D+tdWrdCT0f/8uAchuWQKSHrhU+/NXOHe4vvz+ebAGwKqQaN2eG

  matrix:
  - nodejs_version: "4"
  - nodejs_version: "6"
  - nodejs_version: "7"
  - electron_version: "1.4.12"
    nodejs_version: "6"

platform:
- x86
- x64

install:
- ps: Install-Product node $env:nodejs_version $env:platform
- ps: $env:Path += ";$(pwd)\node_modules\.bin";
- npm install -g node-gyp
- ps: >
    if(($env:appveyor_repo_tag -match "true") -And ($env:APPVEYOR_REPO_COMMIT_MESSAGE.ToLower().StartsWith('release ')) -And ("$(git describe --tags --always HEAD)" -eq $env:appveyor_repo_tag_name)) { 
      $env:publish_binary = 1;
      "We're going to publish a library" | Write-Host
    } else {
      "We're NOT going to publish a library" | Write-Host
      $env:publish_binary = 0;
    }
    true;

- ps: >
    npm config set progress false
    npm config set spin false

# Setup Electron variables
- ps: >
    if ($env:electron_version) {
      "Building for electron, setup variables" | Write-Host
      $env:npm_config_target = $env:electron_version
      $env:npm_config_disturl = "https://atom.io/download/atom-shell"
      $env:npm_config_runtime = "electron"
      if ($env:plaftorm -eq "x86") {
        $env:npm_config_arch = "ia32"
      } else {
        $env:npm_config_arch = "x64"
      }
      "Install electron" | Write-Host
      npm install -g electron@$env:electron_version
    }
    true;

build_script:
- npm install --build-from-source 
- IF %PUBLISH_BINARY% == 1 (node-pre-gyp package 2>&1)
- IF %PUBLISH_BINARY% == 1 (node-pre-gyp-github publish --release 2>&1)
- IF %PUBLISH_BINARY% == 1 (node-pre-gyp clean)

deploy: OFF

matrix:
  fast_finish: true
